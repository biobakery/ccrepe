%% \VignetteIndexEntry{CCREPE}

\documentclass{article}

<<style, echo=FALSE, results=tex>>=
BiocStyle::latex()
@ 

\title{CCREPE}
\author{Emma Schwager and Craig Bielski}

\begin{document}

\maketitle

\tableofcontents

\section{Introduction}

ccrepe is a package for analysis of sparse compositional data.\newline 
It allows calculation of the similarity measure nc-score and calculation of compositionality-corrected p-values 
for arbitrary similarity scores (including user-defined) applied to compositional data.\newline
The package contains two functions {\bf ccrepe} and {\bf nc.score} and is maintained by Emma Schwager (emma.schwager@gmail.com) and George Weingart (george.weingart@gmail.com)

%---------------------------------------------------------
\section{ccrepe} 
%---------------------------------------------------------

{\bf ccrepe} calculates compositionality-corrected p-values and q-values for compositional data. \newline

\subsection{General functionality}
 ccrepe  generates  first a null distribution of the distance metric generated by permutation and renormalization of the data,\newline
 and then by generating an alternative distribution of the distance metric by bootstrap resampling of the data.\newline
 For greater detail, see References.\newline
 The two distributions are compared using a pooled-variance Z-test to give a compositionality-corrected p-value.\newline
 The p-values can be calculated for all appropriate (passing certain quality-control measures) pairwise comparisons,
 or for a subset of user-specified ones. \newline
 Q-values are additionally calculated using the Benjamin-Hochberg-Yekutieli procedure (see References).\newline
\subsection{Arguments}
{\bf x}\newline
   First dataframe or matrix containing the relative abundances in cavity1 : columns are bugs, rows are samples.
   (Rows should therefore sum to a constant.)\newline 
   The subjectIDs, if present, are assumed to be the row names and NOT the first column of data.\newline\newline
{\bf y}\newline
   Second dataframe or matrix (optional) containing the relative abundances in cavity2: columns are bugs, rows are samples. \newline
   The subjectIDs, if present, are assumed to be the row names.\newline
   If both x and y are specified, they will be merged by row names.\newline
   If no row names are specified for either or both datasets,   the default is to use the row numbers as subject IDs.\newline\newline
{\bf sim.score}\newline 
   Similarity measure, such as cor or nc.score.  This similarity measure can be a pre-defined R function or user-defined.  If the latter,
   certain properties should be satisfied as detailed below (also see examples).  The default similarity measure is Spearman correlation.\newline
   A user-defined similarity measure should:\newline
   1.Be able to take either two inputs which are vectors or one input which is either a matrix or a dataframe\newline
   2.In the case of two inputs, return a single number\newline
   3.In the case of one input, return a matrix in which the (i,j)th entry is the similarity score for column i and column j in the original matrix\newline
   4.Resulting matrix (in the case of one input) must be symmetric\newline
   5.The inputs must be named x and y\newline\newline
{\bf sim.score.args}\newline
	A list of arguments for the measurement function.\newline
	For example:  In the case of cor, the following would be acceptable:\newline
	sim.score.args = list(method='spearman',use='complete.obs'	)\newline	
     Note that this is the default behavior.\newline\newline
{\bf min.subj}\newline
  Minimum number of subjects that must be measured in a bug/feature/column in order to apply the similarity measure
  to that bug/feature/column.\newline
  This is to ensure that there are sufficient subjects to perform a bootstrap (default: 20).\newline\newline
{\bf iterations}\newline
  The number of iterations of bootstrap and permutation (default: 1000).\newline\newline
{\bf subset.cols.x}\newline 
  Subset of columns from x to work on.  (Default: NULL - meaning: Use all columns of x. \newline
  All the columns of x are used for normalization but calculations are performed only with the requested subset (by default, all columns).\newline\newline 
{\bf subset.cols.y}\newline
  Subset of columns from y to work on.  (Default: NULL - meaning: Use all columns of y.  \newline
  If applicable (y present), all the columns of y are used for normalization, but calculations are performed only with the requested subset 
  (by default, all columns).  \newline\newline
{\bf errthresh1}\newline\
 Represents the probability of getting all 0's in a given bootstrapped column for the first dataset.\newline
 If a bug/feature/column has a number of zeros that makes the probability of obtaining all zeros when sampling
 with replacement > errthresh, that bug/feature/column will be excluded from the subsequent analysis.\newline
This is to ensure that the standard deviation of the bootstrap sample is non-zero. (default= 0.0001)\newline\newline
{\bf errthresh2}\newline
	Same as errthresh1 but for the second input (y) (default= 0.0001)\newline\newline
{\bf verbose}\newline
Indicator whether the user requested verbose output, which prints periodic progress of the algorithm through the dataset(s),
 as well as including more detailed output.  (default:FALSE)\newline\newline
{\bf iterations.gap}\newline
	If output is verbose - number of iterations after issue a status message (Default=100 - displayed only if verbose=TRUE).\newline\newline
{\bf distributions}\newline
	Output Distribution file  (default:NA).\newline
\subsection{Output}
ccrepe returns a {\bf list} containing the calculation results and the parameters used.\newline\newline  
{\bf Default parameters shown:}\newline 
sim.score,p.values,q.values, and z.stat\newline\newline
{\bf Additional parameters:} (If verbose=TRUE):\newline
	min.subj, iterations, errthresh1, errthresh2, verbose, iterations.gap , sim.score.parameters \newline\newline
{\bf sim.score} is a matrix of the simliarity scores for all the requested comparisons. \newline 
The (i,j)th element of sim.score correponds to the similarity score of column i (or the ith column of subset.cols.1) 
and column j (or the jth column of subset.cols.1) in one dataset, or
to the similarity score of column i (or the ith column of subset.cols.1) in dataset x 
and column j (or the jth column of subset.cols.2)in dataset y in the case of two datasets. \newline\newline
{\bf p.values} is a matrix of the p-values for all the requested comparisons. \newline
The (i,j)th element of p.values corresponds to the p-value of the (i,j)th element of sim.score.\newline\newline
{\bf q.values} is a matrix of the Benjamini-Hochberg-Yekutieli FDR corrected p-values.\newline
The (i,j)th element of q.values corresponds to the q-value fo the (i,j)th element of sim.score.
\subsection{Usage}	
ccrepe(\newline
 x = NA,\newline
 y = NA,\newline
 sim.score = cor,\newline
 sim.score.args = list(),\newline
 min.subj = 20,\newline
 iterations = 1000,\newline
 subset.cols.x = NULL,\newline				 
 subset.cols.y = NULL,\newline 
 errthresh1 = 1e-04,\newline
 errthresh2 = 1e-04,\newline
 verbose = FALSE,\newline
 iterations.gap = 100,\newline
 distributions = NA)\newline
\subsection{Example}
testdata<-matrix(c(\newline
0.29787234, 0.2978723, 0.2553191, 0.1489362,\newline
0.17073171, 0.3170732, 0.2682927, 0.2439024,\newline
0.09302326, 0.3255814, 0.2558140, 0.3255814,\newline
0.32352941, 0.3235294, 0.1470588, 0.2058824,\newline
0.17241379, 0.1724138, 0.4137931, 0.2413793,\newline
0.29729730, 0.2162162, 0.2702703, 0.2162162,\newline
0.22500000, 0.3250000, 0.2000000, 0.2500000,\newline
0.12820513, 0.3589744, 0.2307692, 0.2820513,\newline
0.20000000, 0.2250000, 0.2250000, 0.3500000,\newline
0.10256410, 0.3076923, 0.1794872, 0.4102564\newline
),nrow=10,ncol=4,byrow = TRUE)\newline\newline
dimnames(testdata) = list( \newline
c("Subject 1", "Subject 2","Subject 3","Subject 4","Subject 5",\newline"Subject 6","Subject 7","Subject 8","Subject 9","Subject 10"),  \newline
c("bug 1", "bug 2", "bug 3","bug 4")) \newline\newline
ccrepe.results  <-ccrepe  (x=testdata, iterations=20, min.subj=10)\newline\newline
\subsection{Example Results}
ccrepe.results{\bf\textdollar p.values}
\begin{Verbatim}
          bug 1     bug 2     bug 3     bug 4 
bug 1        NA 0.5808012 0.9673155 0.1766677 
bug 2 0.5808012        NA 0.8433065 0.1884055 
bug 3 0.9673155 0.8433065        NA 0.8728655 
bug 4 0.1766677 0.1884055 0.8728655        NA 
\end{Verbatim}
ccrepe.results{\bf\textdollar q.values}
\begin{Verbatim}
         bug 1    bug 2    bug 3    bug 4 
bug 1       NA 3.556969 2.962038 3.245868 
bug 2 4.268363       NA 3.873461 1.730762 
bug 3 3.231315 4.426813       NA 3.207385 
bug 4 6.491736 2.307683 3.563761       NA 
\end{Verbatim}
ccrepe.results{\bf\textdollar sim.score} 
\begin{Verbatim}
           bug 1      bug 2      bug 3      bug 4 
bug 1  1.0000000 -0.3454545 -0.1636364 -0.7818182 
bug 2 -0.3454545  1.0000000 -0.4424242  0.2727273 
bug 3 -0.1636364 -0.4424242  1.0000000 -0.2727273 
bug 4 -0.7818182  0.2727273 -0.2727273  1.0000000 
\end{Verbatim}
ccrepe.results{\bf\textdollar z.stat}
\begin{Verbatim}
            [,1]       [,2]        [,3]       [,4]
[1,]         NaN  0.5522148 -0.04097541 -1.3510867
[2,]  0.55221476        NaN -0.19766590  1.3153106
[3,] -0.04097541 -0.1976659         NaN  0.1600198
[4,] -1.35108669  1.3153106  0.16001976        NaN
\end{Verbatim}

%---------------------------------------------------------
\section{nc.score} 
%---------------------------------------------------------

{\bf nc.score} calculates species-level co-variation and co-exclusion patterns based on an extension of the checkerboard score to ordinal data.\newline

\subsection{nc.score: General Funcionality}
  nc.score is an extension to Diamond's checkerboard score (See references below) to ordinal data and implements a
  framework for robust detection of species-level association patterns in metagenomic data.\newline
  It performs quality control and transforms relative abundances to ordinal values and computes an association measure,\newline
  the NC-score (n-dimensional checkerboard score), for each species pair.\newline

\subsection{nc.score: Arguments}
{\bf x}\newline 
   First entity to be processed.   Columns are bugs, rows are samples.\newline\newline
{\bf y}\newline 
   Vector.  If selected, x must be a vector as well.   \newline\newline
{\bf bins}\newline
 Either the number of bins to use or a vector specifying the cutoffs.\newline
 If a single number is give, this is used as the number of bins in the discretize function of the package infotheo.\newline
 If a vector is specified, the function findInterval is used to discretize the data according to the cutoffs given.\newline
 The default behavior is to use the defaults for the discretize function.\newline\newline
{\bf verbose}\newline
 Request verbose output\newline\newline
{\bf min.abundance}\newline
Minimum abundance threshold: Assures selection of species with abundance >= min.abundance in more than min.samples percent of samples.\newline\newline
{\bf min.samples} 
Minimum samples threshold: Assures selection of species with abundance >= min.abundance in more than min.samples percent of samples.\newline\newline
\subsection{nc.score: Output}		
nc.score generates a matrix or vectors of normalized scores.
\subsection{nc.score: Usage}
\begin{Verbatim}	
nc.score(x = NA,
y = NA, 
bins = NA, 
verbose = FALSE,			 
min.abundance = 1e-04,
min.samples = 0.1)
\end{Verbatim}
\subsection{nc.score: Example}		
\begin{Verbatim}
 testdata<-matrix(c(
        0.29787234, 0.2978723, 0.2553191, 0.1489362, 
        0.17073171, 0.3170732, 0.2682927, 0.2439024, 
        0.09302326, 0.3255814, 0.2558140, 0.3255814, 
        0.32352941, 0.3235294, 0.1470588, 0.2058824, 
        0.17241379, 0.1724138, 0.4137931, 0.2413793, 
        0.29729730, 0.2162162, 0.2702703, 0.2162162, 
        0.22500000, 0.3250000, 0.2000000, 0.2500000, 
        0.12820513, 0.3589744, 0.2307692, 0.2820513, 
        0.20000000, 0.2250000, 0.2250000, 0.3500000, 
        0.10256410, 0.3076923, 0.1794872, 0.4102564 
        ),nrow=10,ncol=4,byrow = TRUE) 
		
nc.score( x=testdata ) 
\end{Verbatim}
\subsection{nc.score: Example Results}
\begin{Verbatim}
nc.score( x=testdata )
          bug 1     bug 2     bug 3     bug 4
bug 1        NA 0.3243243 0.2432432 0.2162162
bug 2 0.3243243        NA 0.3513514 0.7027027
bug 3 0.2432432 0.3513514        NA 0.4864865
bug 4 0.2162162 0.7027027 0.4864865        NA
\end{Verbatim}
\end{document}
